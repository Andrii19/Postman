{
	"info": {
		"_postman_id": "845449ab-26c9-41f2-93f7-7e2829f052fe",
		"name": "HW2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1 endpoint",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6fcf2c16-2833-4cae-b2d9-ee7444d46899",
						"exec": [
							"//Проверить, что в body приходит правильный string\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "2  endpoint",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1cd4ecec-92c1-44dc-a021-05cb1fe277a3",
						"exec": [
							"//Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Спарсить response body в json.\r",
							"let jsonData = pm.response.json();\r",
							"//Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"Name check 1\", function () {\r",
							"    pm.expect(\"Andrii\").to.eql(jsonData.name);\r",
							"});\r",
							"  //Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Age check 1\", function () {\r",
							"    pm.expect(\"29\").to.eql(jsonData.age);\r",
							"});\r",
							"   //Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Salary check 1\", function () {\r",
							"    pm.expect(1000).to.eql(jsonData.salary);\r",
							"});\r",
							"   //Спарсить request.\r",
							"let req = pm.response.json();\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request\r",
							"\r",
							"pm.test(\"Name check 2\", function () {\r",
							"   pm.expect(req.name).to.eql(jsonData.name);\r",
							"});\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Age check 2\", function () {\r",
							"   pm.expect(req.age).to.eql(jsonData.age);\r",
							"});\r",
							"\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Salary check 2\", function () {\r",
							"   pm.expect(req.salary).to.eql(jsonData.salary);\r",
							"});\r",
							"//Вывести в консоль параметр family из response.\r",
							"console.log(req.family)\r",
							"//Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"let salary_check_1_5_year = req.salary * 4\r",
							"pm.test(\"salary_check_1_5_year\", function () {\r",
							"        pm.expect(req.family.u_salary_1_5_year).to.eql(salary_check_1_5_year);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "31d9ff3c-2c9a-4f90-be3f-70b047b4626a",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Andrii",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "3 endpoint",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9eb9a58f-e9b4-4378-b261-a8d755137e72",
						"exec": [
							"// Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Спарсить response body в json.\r",
							"let jsonData = pm.response.json();\r",
							"//Спарсить request\r",
							"let req = pm.response.json();\r",
							"// Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Name check\", function () {\r",
							"   pm.expect(req.name).to.eql(jsonData.name);\r",
							"});\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Age check\", function () {\r",
							"   pm.expect(req.age).to.eql(jsonData.age);\r",
							"});\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Salary check\", function () {\r",
							"   pm.expect(req.salary).to.eql(jsonData.salary);\r",
							"});\r",
							"//Вывести в консоль параметр family из response\r",
							"console.log(req.family)\r",
							"// Проверить, что у параметра dog есть параметры name\r",
							"pm.test(\"Dogs name\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"//Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Dogs age\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"// Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Dogs name check\", function () {\r",
							"   pm.expect(\"Luky\").to.eql(jsonData.family.pets.dog.name);\r",
							"});\r",
							"// Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"Check age 2\", function () {\r",
							"   pm.expect(4).to.eql(jsonData.family.pets.dog.age);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Andrii&age=29&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Andrii"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}